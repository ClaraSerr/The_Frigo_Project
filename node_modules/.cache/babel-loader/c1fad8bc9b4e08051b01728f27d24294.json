{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/test/src/Components/Home/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './style.css';\nimport NavbarComp from '../Navbar/NavbarComp';\nimport axios from 'axios';\nimport { DataSet, Network } from \"vis-network/standalone\";\nimport { useState, useEffect } from 'react';\nimport network from '../MyGraph/MyGraph';\n/**\n* @author\n* @function Home\n**/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = props => {\n  _s();\n\n  const [value, setValue] = useState(0);\n  const [array, setArray] = useState([\"not working\", \"ue\"]);\n\n  const getmeal = () => {\n    axios.get('https://www.themealdb.com/api/json/v1/1/search.php?f=b').then(response => {\n      setArray(response.data.meals);\n    });\n  }; // create an array with nodes\n\n\n  const nodes = new DataSet([{\n    id: 1,\n    label: \"Node 1\"\n  }, {\n    id: 2,\n    label: \"Node 2\"\n  }, {\n    id: 3,\n    label: \"Node 3\"\n  }, {\n    id: 4,\n    label: \"Node 4\"\n  }, {\n    id: 5,\n    label: \"Node 5\"\n  }]); // create an array with edges\n\n  const edges = new DataSet([{\n    from: 1,\n    to: 3\n  }, {\n    from: 1,\n    to: 2\n  }, {\n    from: 2,\n    to: 4\n  }, {\n    from: 2,\n    to: 5\n  }, {\n    from: 3,\n    to: 3\n  }]); // create a network\n\n  const container = document.getElementById(\"mynetwork\");\n  const data = {\n    nodes: nodes,\n    edges: edges\n  };\n  const options = {};\n  const network = new Network(container, data, options);\n  /*useEffect(()=> {\n      console.log(array[0])\n  },[value])*/\n\n  /*const test=()=>{\n      if(value==5){\n          setValue(0)\n      }\n      else{setValue(5)}\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Home\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        getmeal();\n      },\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/287.png\",\n      className: \"sprite\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NavbarComp, {\n      data: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mynetwork\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: array[0].strMeal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NavbarComp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"EGe9lQ3OafCZHJnlFgnYKzKlPZc=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/oem/Documents/test/src/Components/Home/Home.js"],"names":["React","NavbarComp","axios","DataSet","Network","useState","useEffect","network","Home","props","value","setValue","array","setArray","getmeal","get","then","response","data","meals","nodes","id","label","edges","from","to","container","document","getElementById","options","strMeal"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './style.css'\nimport NavbarComp from '../Navbar/NavbarComp'\nimport axios from 'axios'\n\nimport { DataSet, Network } from \"vis-network/standalone\";\nimport {useState,useEffect} from 'react'\nimport network from '../MyGraph/MyGraph'\n\n/**\n* @author\n* @function Home\n**/\n\nconst Home = (props) => {\nconst [value,setValue] = useState(0)\nconst [array,setArray] = useState([\"not working\",\"ue\"])\n\n\n\nconst getmeal=()=>{\n    axios\n      .get('https://www.themealdb.com/api/json/v1/1/search.php?f=b')\n      .then(response =>{\n        setArray(response.data.meals);\n      })\n  }\n  // create an array with nodes\nconst nodes = new DataSet([\n  { id: 1, label: \"Node 1\" },\n  { id: 2, label: \"Node 2\" },\n  { id: 3, label: \"Node 3\" },\n  { id: 4, label: \"Node 4\" },\n  { id: 5, label: \"Node 5\" }\n]);\n\n// create an array with edges\nconst edges = new DataSet([\n  { from: 1, to: 3 },\n  { from: 1, to: 2 },\n  { from: 2, to: 4 },\n  { from: 2, to: 5 },\n  { from: 3, to: 3 }\n]);\n\n// create a network\nconst container = document.getElementById(\"mynetwork\");\nconst data = {\n  nodes: nodes,\n  edges: edges\n};\nconst options = {};\nconst network = new Network(container, data, options);\n\n/*useEffect(()=> {\n    console.log(array[0])\n},[value])*/\n\n    /*const test=()=>{\n        if(value==5){\n            setValue(0)\n        }\n        else{setValue(5)}\n    }*/\n  return(\n    <div>Home\n        <button onClick={()=>{getmeal()}}>Test</button>\n        <img src={\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/287.png\"} className=\"sprite\"/>\n        <NavbarComp data={value}/>\n        <div id=\"mynetwork\"></div>\n        <h3>{array[0].strMeal}</h3>\n        <NavbarComp/>\n    </div>\n   )\n\n }\n\n export default Home"]},"metadata":{},"sourceType":"module"}