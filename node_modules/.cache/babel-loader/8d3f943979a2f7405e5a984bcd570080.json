{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/test/src/Components/Home/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './style.css';\nimport NavbarComp from '../Navbar/NavbarComp';\nimport axios from 'axios';\nimport vis from 'vis';\nimport { useState, useEffect } from 'react';\nimport network from '../MyGraph/MyGraph';\n/**\n* @author\n* @function Home\n**/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = props => {\n  _s();\n\n  const [value, setValue] = useState(0);\n  const [array, setArray] = useState([\"not working\", \"ue\"]);\n\n  const getmeal = () => {\n    axios.get('https://www.themealdb.com/api/json/v1/1/search.php?f=b').then(response => {\n      setArray(response.data.meals);\n    });\n  };\n\n  var nodes = [{\n    id: 100,\n    label: \"This node has no fixed, minimum or maximum width or height\",\n    x: -50,\n    y: -300\n  }, {\n    id: 210,\n    widthConstraint: {\n      minimum: 120\n    },\n    label: \"This node has a mimimum width\",\n    x: -400,\n    y: -200\n  }, {\n    id: 211,\n    widthConstraint: {\n      minimum: 120\n    },\n    label: \"...so does this\",\n    x: -500,\n    y: -50\n  }, {\n    id: 220,\n    widthConstraint: {\n      maximum: 170\n    },\n    label: \"This node has a maximum width and breaks have been automatically inserted into the label\",\n    x: -150,\n    y: -150\n  }, {\n    id: 221,\n    widthConstraint: {\n      maximum: 170\n    },\n    label: \"...this too\",\n    x: -100,\n    y: 0\n  }, {\n    id: 200,\n    font: {\n      multi: true\n    },\n    widthConstraint: 150,\n    label: \"<b>This</b> node has a fixed width and breaks have been automatically inserted into the label\",\n    x: -300,\n    y: 50\n  }, {\n    id: 201,\n    widthConstraint: 150,\n    label: \"...this as well\",\n    x: -300,\n    y: 200\n  }, {\n    id: 300,\n    heightConstraint: {\n      minimum: 70\n    },\n    label: \"This node\\nhas a\\nminimum\\nheight\",\n    x: 100,\n    y: -150\n  }, {\n    id: 301,\n    heightConstraint: {\n      minimum: 70\n    },\n    label: \"...this one here too\",\n    x: 100,\n    y: 0\n  }, {\n    id: 400,\n    heightConstraint: {\n      minimum: 100,\n      valign: \"top\"\n    },\n    label: \"Minimum height\\nvertical alignment\\nmay be top\",\n    x: 300,\n    y: -200\n  }, {\n    id: 401,\n    heightConstraint: {\n      minimum: 100,\n      valign: \"middle\"\n    },\n    label: \"Minimum height\\nvertical alignment\\nmay be middle\\n(default)\",\n    x: 300,\n    y: 0\n  }, {\n    id: 402,\n    heightConstraint: {\n      minimum: 100,\n      valign: \"bottom\"\n    },\n    label: \"Minimum height\\nvertical alignment\\nmay be bottom\",\n    x: 300,\n    y: 200\n  }];\n  var edges = [{\n    from: 100,\n    to: 210,\n    label: \"unconstrained to minimum width\"\n  }, {\n    from: 210,\n    to: 211,\n    label: \"more minimum width\"\n  }, {\n    from: 100,\n    to: 220,\n    label: \"unconstrained to maximum width\"\n  }, {\n    from: 220,\n    to: 221,\n    label: \"more maximum width\"\n  }, {\n    from: 210,\n    to: 200,\n    label: \"minimum width to fixed width\"\n  }, {\n    from: 220,\n    to: 200,\n    label: \"maximum width to fixed width\"\n  }, {\n    from: 200,\n    to: 201,\n    label: \"more fixed width\"\n  }, {\n    from: 100,\n    to: 300,\n    label: \"unconstrained to minimum height\"\n  }, {\n    from: 300,\n    to: 301,\n    label: \"more minimum height\"\n  }, {\n    from: 100,\n    to: 400,\n    label: \"unconstrained to top valign\"\n  }, {\n    from: 400,\n    to: 401,\n    label: \"top valign to middle valign\"\n  }, {\n    from: 401,\n    to: 402,\n    widthConstraint: {\n      maximum: 150\n    },\n    label: \"middle valign to bottom valign\"\n  }];\n  var container = document.getElementById(\"mynetwork\");\n  var data = {\n    nodes: nodes,\n    edges: edges\n  };\n  var options = {\n    edges: {\n      font: {\n        size: 12\n      },\n      widthConstraint: {\n        maximum: 90\n      }\n    },\n    nodes: {\n      shape: \"box\",\n      margin: 10,\n      widthConstraint: {\n        maximum: 200\n      }\n    },\n    physics: {\n      enabled: false\n    }\n  };\n  var network = new vis.Network(container, data, options);\n  /*useEffect(()=> {\n      console.log(array[0])\n  },[value])*/\n\n  /*const test=()=>{\n      if(value==5){\n          setValue(0)\n      }\n      else{setValue(5)}\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Home\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        getmeal();\n      },\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/287.png\",\n      className: \"sprite\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NavbarComp, {\n      data: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mynetwork\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: array[0].strMeal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NavbarComp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"EGe9lQ3OafCZHJnlFgnYKzKlPZc=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/oem/Documents/test/src/Components/Home/Home.js"],"names":["React","NavbarComp","axios","vis","useState","useEffect","network","Home","props","value","setValue","array","setArray","getmeal","get","then","response","data","meals","nodes","id","label","x","y","widthConstraint","minimum","maximum","font","multi","heightConstraint","valign","edges","from","to","container","document","getElementById","options","size","shape","margin","physics","enabled","Network","strMeal"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './style.css'\nimport NavbarComp from '../Navbar/NavbarComp'\nimport axios from 'axios'\nimport vis from 'vis'\nimport {useState,useEffect} from 'react'\nimport network from '../MyGraph/MyGraph'\n\n/**\n* @author\n* @function Home\n**/\n\nconst Home = (props) => {\nconst [value,setValue] = useState(0)\nconst [array,setArray] = useState([\"not working\",\"ue\"])\n\n\n\nconst getmeal=()=>{\n    axios\n      .get('https://www.themealdb.com/api/json/v1/1/search.php?f=b')\n      .then(response =>{\n        setArray(response.data.meals);\n      })\n  }\n  var nodes = [\n    {\n      id: 100,\n      label: \"This node has no fixed, minimum or maximum width or height\",\n      x: -50,\n      y: -300,\n    },\n    {\n      id: 210,\n      widthConstraint: { minimum: 120 },\n      label: \"This node has a mimimum width\",\n      x: -400,\n      y: -200,\n    },\n    {\n      id: 211,\n      widthConstraint: { minimum: 120 },\n      label: \"...so does this\",\n      x: -500,\n      y: -50,\n    },\n    {\n      id: 220,\n      widthConstraint: { maximum: 170 },\n      label:\n        \"This node has a maximum width and breaks have been automatically inserted into the label\",\n      x: -150,\n      y: -150,\n    },\n    {\n      id: 221,\n      widthConstraint: { maximum: 170 },\n      label: \"...this too\",\n      x: -100,\n      y: 0,\n    },\n    {\n      id: 200,\n      font: { multi: true },\n      widthConstraint: 150,\n      label:\n        \"<b>This</b> node has a fixed width and breaks have been automatically inserted into the label\",\n      x: -300,\n      y: 50,\n    },\n    {\n      id: 201,\n      widthConstraint: 150,\n      label: \"...this as well\",\n      x: -300,\n      y: 200,\n    },\n    {\n      id: 300,\n      heightConstraint: { minimum: 70 },\n      label: \"This node\\nhas a\\nminimum\\nheight\",\n      x: 100,\n      y: -150,\n    },\n    {\n      id: 301,\n      heightConstraint: { minimum: 70 },\n      label: \"...this one here too\",\n      x: 100,\n      y: 0,\n    },\n    {\n      id: 400,\n      heightConstraint: { minimum: 100, valign: \"top\" },\n      label: \"Minimum height\\nvertical alignment\\nmay be top\",\n      x: 300,\n      y: -200,\n    },\n    {\n      id: 401,\n      heightConstraint: { minimum: 100, valign: \"middle\" },\n      label: \"Minimum height\\nvertical alignment\\nmay be middle\\n(default)\",\n      x: 300,\n      y: 0,\n    },\n    {\n      id: 402,\n      heightConstraint: { minimum: 100, valign: \"bottom\" },\n      label: \"Minimum height\\nvertical alignment\\nmay be bottom\",\n      x: 300,\n      y: 200,\n    },\n  ];\n  \n  var edges = [\n    { from: 100, to: 210, label: \"unconstrained to minimum width\" },\n    { from: 210, to: 211, label: \"more minimum width\" },\n    { from: 100, to: 220, label: \"unconstrained to maximum width\" },\n    { from: 220, to: 221, label: \"more maximum width\" },\n    { from: 210, to: 200, label: \"minimum width to fixed width\" },\n    { from: 220, to: 200, label: \"maximum width to fixed width\" },\n    { from: 200, to: 201, label: \"more fixed width\" },\n    { from: 100, to: 300, label: \"unconstrained to minimum height\" },\n    { from: 300, to: 301, label: \"more minimum height\" },\n    { from: 100, to: 400, label: \"unconstrained to top valign\" },\n    { from: 400, to: 401, label: \"top valign to middle valign\" },\n    {\n      from: 401,\n      to: 402,\n      widthConstraint: { maximum: 150 },\n      label: \"middle valign to bottom valign\",\n    },\n  ];\n  \n  var container = document.getElementById(\"mynetwork\");\n  var data = {\n    nodes: nodes,\n    edges: edges,\n  };\n  var options = {\n    edges: {\n      font: {\n        size: 12,\n      },\n      widthConstraint: {\n        maximum: 90,\n      },\n    },\n    nodes: {\n      shape: \"box\",\n      margin: 10,\n      widthConstraint: {\n        maximum: 200,\n      },\n    },\n    physics: {\n      enabled: false,\n    },\n  };\n  var network = new vis.Network(container, data, options);\n\n/*useEffect(()=> {\n    console.log(array[0])\n},[value])*/\n\n    /*const test=()=>{\n        if(value==5){\n            setValue(0)\n        }\n        else{setValue(5)}\n    }*/\n  return(\n    <div>Home\n        <button onClick={()=>{getmeal()}}>Test</button>\n        <img src={\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/287.png\"} className=\"sprite\"/>\n        <NavbarComp data={value}/>\n        <div id=\"mynetwork\"></div>\n        <h3>{array[0].strMeal}</h3>\n        <NavbarComp/>\n    </div>\n   )\n\n }\n\n export default Home"]},"metadata":{},"sourceType":"module"}